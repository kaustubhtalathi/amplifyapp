[{"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/index.js":"1","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/reportWebVitals.js":"2","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/App.js":"3","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/aws-exports.js":"4","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/graphql/queries.js":"5","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/graphql/mutations.js":"6"},{"size":600,"mtime":1608963847466,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608962066891,"results":"9","hashOfConfig":"8"},{"size":3408,"mtime":1609035906472,"results":"10","hashOfConfig":"8"},{"size":877,"mtime":1609035658759,"results":"11","hashOfConfig":"8"},{"size":622,"mtime":1609035655945,"results":"12","hashOfConfig":"8"},{"size":952,"mtime":1609035655965,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"dtohs0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/index.js",[],["28","29"],"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/reportWebVitals.js",[],"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/App.js",["30"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { API, Storage } from \"aws-amplify\";\nimport { withAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport { listNotes } from \"./graphql/queries\";\nimport {\n    createNote as createNoteMutation,\n    deleteNote as deleteNoteMutation,\n} from \"./graphql/mutations\";\n\nconst initialFormState = { name: \"\", description: \"\" };\n\nfunction App() {\n    const [notes, setNotes] = useState([]);\n    const [formData, setFormData] = useState(initialFormState);\n\n    useEffect(() => {\n        fetchNotes();\n    }, []);\n\n    async function fetchNotes() {\n        const apiData = await API.graphql({ query: listNotes });\n        const notesFromAPI = apiData.data.listNotes.items;\n        await Promise.all(\n            notesFromAPI.map(async (note) => {\n                if (note.image) {\n                    const image = await Storage.get(note.image);\n                    note.image = image;\n                }\n                return note;\n            })\n        );\n        setNotes(apiData.data.listNotes.items);\n    }\n\n    async function createNote() {\n        if (!formData.name || !formData.description) return;\n        await API.graphql({\n            query: createNoteMutation,\n            variables: { input: formData },\n        });\n        if (formData.image) {\n            const image = await Storage.get(formData.image);\n            formData.image = image;\n        }\n        setNotes([...notes, formData]);\n        setFormData(initialFormState);\n    }\n\n    async function deleteNote({ id }) {\n        const newNotesArray = notes.filter((note) => note.id !== id);\n        setNotes(newNotesArray);\n        await API.graphql({\n            query: deleteNoteMutation,\n            variables: { input: { id } },\n        });\n    }\n\n    async function onChange(e) {\n        if (!e.target.files[0]) return;\n        const file = e.target.files[0];\n        setFormData({ ...formData, image: file.name });\n        await Storage.put(file.name, file);\n        fetchNotes();\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>My Notes App</h1>\n            <input\n                onChange={(e) =>\n                    setFormData({ ...formData, name: e.target.value })\n                }\n                placeholder=\"Note name\"\n                value={formData.name}\n            />\n            <input\n                onChange={(e) =>\n                    setFormData({ ...formData, description: e.target.value })\n                }\n                placeholder=\"Note description\"\n                value={formData.description}\n            />\n            <input type=\"file\" onChange={onChange} />\n            <button onClick={createNote}>Create Note</button>\n            <div style={{ marginBottom: 30 }}>\n                {notes.map((note) => (\n                    <div key={note.id || note.name}>\n                        <h2>{note.name}</h2>\n                        <p>{note.description}</p>\n                        <button onClick={() => deleteNote(note)}>\n                            Delete note\n                        </button>\n                        {note.image && (\n                            <img src={note.image} style={{ width: 400 }} />\n                        )}\n                    </div>\n                ))}\n            </div>\n            <AmplifySignOut />\n        </div>\n    );\n}\n\nexport default withAuthenticator(App);\n","/Users/websleengur/Documents/Projects/aws/amplifyapp/src/aws-exports.js",[],"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/graphql/queries.js",[],"/Users/websleengur/Documents/Projects/aws/amplifyapp/src/graphql/mutations.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":95,"column":29,"nodeType":"37","endLine":95,"endColumn":76},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]